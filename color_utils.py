"""
色に関するユーティリティ関数を提供するモジュール
"""

# 基本的な色の名前とRGB値のマッピング
COLOR_MAP = {
    # 赤系
    "赤": [255, 0, 0],
    "暗赤色": [139, 0, 0],
    "ワインレッド": [128, 0, 32],
    "サーモンピンク": [250, 128, 114],
    "ピンク": [255, 192, 203],
    "ホットピンク": [255, 105, 180],
    "コーラルピンク": [255, 127, 80],
    
    # オレンジ系
    "オレンジ": [255, 165, 0],
    "ダークオレンジ": [255, 140, 0],
    "ゴールド": [255, 215, 0],
    
    # 黄色系
    "黄色": [255, 255, 0],
    "レモンイエロー": [255, 250, 205],
    "マスタード": [225, 173, 1],
    
    # 緑系
    "緑": [0, 128, 0],
    "ライム": [0, 255, 0],
    "黄緑": [154, 205, 50],
    "オリーブ": [128, 128, 0],
    "ミントグリーン": [152, 255, 152],
    "ターコイズ": [64, 224, 208],
    
    # 青系
    "青": [0, 0, 255],
    "ライトブルー": [173, 216, 230],
    "スカイブルー": [135, 206, 235],
    "ターコイズブルー": [0, 199, 140],
    "ネイビー": [0, 0, 128],
    "ロイヤルブルー": [65, 105, 225],
    
    # 紫系
    "紫": [128, 0, 128],
    "ラベンダー": [230, 230, 250],
    "マゼンタ": [255, 0, 255],
    "ライラック": [200, 162, 200],
    
    # 茶系
    "茶色": [165, 42, 42],
    "ベージュ": [245, 245, 220],
    "タン": [210, 180, 140],
    "チョコレート": [139, 69, 19],
    
    # グレー系
    "黒": [0, 0, 0],
    "ダークグレー": [64, 64, 64],
    "グレー": [128, 128, 128],
    "シルバー": [192, 192, 192],
    "ライトグレー": [211, 211, 211],
    "白": [255, 255, 255],
}

def get_color_distance(color1, color2):
    """2つの色のユークリッド距離を計算"""
    return sum((c1 - c2) ** 2 for c1, c2 in zip(color1, color2)) ** 0.5

def get_color_name(rgb):
    """最も近い色の名前を取得"""
    min_distance = float('inf')
    closest_color = "不明"
    
    for color_name, color_rgb in COLOR_MAP.items():
        distance = get_color_distance(rgb, color_rgb)
        if distance < min_distance:
            min_distance = distance
            closest_color = color_name
    
    return closest_color
